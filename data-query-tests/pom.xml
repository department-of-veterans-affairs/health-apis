<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>gov.va.api.health</groupId>
    <artifactId>test-starter</artifactId>
    <version>2.0.4-SNAPSHOT</version>
    <relativePath/>
  </parent>
  <artifactId>data-query-tests</artifactId>
  <version>1.0.213-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <groups>gov.va.api.health.sentinel.categories.Local</groups>
    <selenium.version>3.141.59</selenium.version>
    <sentinel.skipLaunch>false</sentinel.skipLaunch>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.dvp</groupId>
      <artifactId>lighthouse-keystore</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>ids-api</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>ids</artifactId>
      <version>1.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>mr-anderson</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>data-query</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>data-query-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>sentinel</artifactId>
      <version>2.0.4-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.dvp</groupId>
      <artifactId>cdw-schemas</artifactId>
      <version>${cdw-schemas.version}</version>
      <!-- defined in parent -->
      <classifier>samples</classifier>
      <type>zip</type>
      <exclusions>
        <exclusion>
          <groupId>org.mule.modules</groupId>
          <artifactId>mule-module-objectstore</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.mulesoft.security</groupId>
          <artifactId>mule-module-security-property-placeholder</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!--
         SSL certs are required for running but not intended to be part of the classpath.
         We want to fetch them so they can be referenced locally from the file system
         for running and testing.
       -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-certs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/certs</outputDirectory>
              <includeArtifactIds>lighthouse-keystore</includeArtifactIds>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cdw-samples</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/cdw</outputDirectory>
              <includeArtifactIds>cdw-schemas</includeArtifactIds>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
          <execution>
            <id>copy-applications</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <includeArtifactIds>h2,ids,mr-anderson,data-query</includeArtifactIds>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--
        Launch process for services
      -->
      <plugin>
        <groupId>com.bazaarvoice.maven.plugins</groupId>
        <artifactId>process-exec-maven-plugin</artifactId>
        <version>${process-exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>ids-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>ids</name>
              <waitForInterrupt>false</waitForInterrupt>
              <healthcheckUrl>https://localhost:8089/actuator/health</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <arguments>
                <argument>java</argument>
                <argument>-cp</argument>
                <argument>ids.jar${path.separator}h2.jar</argument>
                <argument>-Dloader=gov.va.api.health.ids.service.Application</argument>
                <argument>-Dspring.jpa.generate-ddl=true</argument>
                <argument>-Dspring.jpa.hibernate.ddl-auto=create-drop</argument>
                <argument>-Dspring.datasource.driver-class-name=org.h2.Driver</argument>
                <argument>-Dspring.datasource.url=jdbc:h2:mem:whatever</argument>
                <argument>-Dserver.ssl.key-store=file:certs/system/DVP-DVP-NONPROD.jks</argument>
                <argument>-Dserver.ssl.key-alias=internal-sys-dev</argument>
                <argument>-Dssl.key-store=file:certs/system/DVP-DVP-NONPROD.jks</argument>
                <argument>-Dssl.use-trust-store=false</argument>
                <argument>-Dssl.trust-store=file:certs/system/DVP-NONPROD-truststore.jks</argument>
                <argument>-Dspring.config.location=classpath:/application.properties,file:${project.basedir}/config/secrets.properties</argument>
                <argument>org.springframework.boot.loader.PropertiesLauncher</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>mr-anderson-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>mr-anderson</name>
              <healthcheckUrl>https://localhost:8088/actuator/health</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <waitForInterrupt>false</waitForInterrupt>
              <arguments>
                <argument>java</argument>
                <argument>-cp</argument>
                <argument>mr-anderson.jar</argument>
                <argument>-Dloader.path=data-query-tests-${project.version}.jar</argument>
                <argument>-Dloader=gov.va.api.health.mranderson.Application</argument>
                <argument>-Dmanagement.health.db.enabled=false</argument>
                <argument>-Dspring.datasource.driver-class-name=gov.va.api.health.dataquery.tests.mockcdw.MockEntityReturnDriver</argument>
                <argument>-Dspring.datasource.url=jdbc:mockcdw://cdw/samples/index.yaml,${project.basedir}/src/test/resources/cdw/index.yaml</argument>
                <argument>-Didentityservice.url=https://localhost:8089</argument>
                <argument>-Dserver.ssl.key-store=file:certs/system/DVP-DVP-NONPROD.jks</argument>
                <argument>-Dserver.ssl.key-alias=internal-sys-dev</argument>
                <argument>-Dssl.verify=false</argument>
                <argument>-Dssl.key-store=file:certs/system/DVP-DVP-NONPROD.jks</argument>
                <argument>-Dssl.use-trust-store=false</argument>
                <argument>-Dssl.trust-store=file:certs/system/DVP-NONPROD-truststore.jks</argument>
                <argument>-Dspring.config.location=classpath:/application.properties,file:${project.basedir}/config/secrets.properties</argument>
                <argument>org.springframework.boot.loader.PropertiesLauncher</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>data-query-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>data-query</name>
              <healthcheckUrl>https://localhost:8090/actuator/health</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <arguments>
                <argument>java</argument>
                <argument>-cp</argument>
                <argument>data-query.jar</argument>
                <argument>-Dloader.path=data-query-tests-${project.version}.jar</argument>
                <argument>-Dloader=gov.va.api.health.dataquery.service.Application</argument>
                <argument>-Dmranderson.url=https://localhost:8088</argument>
                <argument>-Dargonaut.url=https://localhost:8090</argument>
                <argument>-Dhealth-check.medication-id=skip</argument>
                <argument>-Dconformance.statement-type=patient</argument>
                <argument>-Dconformance.contact.name=Sentinel</argument>
                <argument>-Dconformance.contact.email=sentinel@matrix.com</argument>
                <argument>-Dconformance.security.token-endpoint=http://example.com/token</argument>
                <argument>-Dconformance.security.authorize-endpoint=http://example.com/authorize</argument>
                <argument>-Dserver.ssl.key-store=file:certs/system/DVP-DVP-NONPROD.jks</argument>
                <argument>-Dserver.ssl.key-alias=internal-sys-dev</argument>
                <argument>-Dssl.verify=false</argument>
                <argument>-Dssl.key-store=file:certs/system/DVP-DVP-NONPROD.jks</argument>
                <argument>-Dssl.use-trust-store=false</argument>
                <argument>-Dssl.trust-store=file:certs/system/DVP-NONPROD-truststore.jks</argument>
                <argument>-Dspring.config.location=classpath:/application.properties,file:${project.basedir}/config/secrets.properties</argument>
                <argument>org.springframework.boot.loader.PropertiesLauncher</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>stop-all</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop-all</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>push</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
